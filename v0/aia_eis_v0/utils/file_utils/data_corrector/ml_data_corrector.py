import os
import pickle

from utils.file_utils.dataset_reader_pack.ml_dataset_reader import get_T_V_T_dataset
from utils.file_utils.filename_utils import get_date_prefix

"""
在2020-03-07日生成的训练、验证、测试数据集中的训练和验证数据集中有一下两条数据相同，标签不同的样本
    数据如下：
        [4, [0.010820171959196951, 1.0, 0.01630376465973397, 0.9887005649439885, 0.02175795455276722, 0.9830508474904379, 0.04348650644694115, 0.9774011298879769, 0.07609403546858824, 0.9661016948319653, 0.10327677740470584, 0.9548022599248643, 0.1413090938097033, 0.9435028248688527, 0.17391662298026075, 0.9322033898128411, 0.1793708128732941, 0.9265536723592906, 0.18489850941281064, 0.9067796610484979, 0.21208125120001783, 0.8954802259924864, 0.27738451751691284, 0.8559322033709013, 0.23924929180683874, 0.8870056497377053, 0.28279460342205615, 0.8587570621721318, 0.3046995711188796, 0.8192090395505465, 0.31571086035893314, 0.7881355931837424, 0.33211753417483336, 0.7627118644193992, 0.3376011267264599, 0.7514124293633876, 0.26106605152788226, 0.8644067796256824, 0.3594472891060968, 0.723163841797814, 0.36513670026787665, 0.6723163841202172, 0.40340423779271034, 0.6158192089890699, 0.40356595226606323, 0.5847457627711762, 0.4363204947295874, 0.545197740149591, 0.4364822092029403, 0.5141242937827868, 0.46928085550544396, 0.46610169490642056, 0.4748673573621472, 0.4350282485396164, 0.4966988184124874, 0.40960451977527323, 0.49142104432210365, 0.3813559322096996, 0.5024323334132468, 0.35028248584289545, 0.5188831112170371, 0.3163841808237712, 0.5244549117444437, 0.28813559325819754, 0.5245725223788169, 0.2655367231461745, 0.5356426167871468, 0.22316384187226915, 0.54665390587829, 0.19209039550546497, 0.54674211385407, 0.17514124299590292, 0.5577681042745097, 0.14124293782786826, 0.5579298187478627, 0.11016949160997452, 0.5526961486453689, 0.07344632778961978, 0.5582973518313689, 0.03954802262158512, 0.569352744910402, 0.0, 0.585568301594356, 0.011299435056011466, 0.5355838114699601, 0.23446327692828073, 0.5079012247844873, 0.34180790958811436, 0.46935436215192733, 0.45197740119808893, 0.4365557158494236, 0.5000000000744552, 0.4253974134653138, 0.5593220338579226, 0.4143567217155773, 0.5960451976782773, 0.3870122653061068, 0.6384180791010929, 0.37603037887355695, 0.6638418078654361, 0.37578045642442404, 0.7118644067418025, 0.34839189602706355, 0.7627118644193992, 0.32642812301305346, 0.8135593219480854, 0.2882193908054065, 0.8587570621721318, 0.2991571732500663, 0.8418079095136592, 0.2719156261456725, 0.8644067796256824, 0.25012826908322233, 0.8813559321352443, 0.20661235997768793, 0.9039548022472674, 0.1631258535307468, 0.9209039547568296, 0.14676328370273656, 0.9378531072663917, 0.0870024154035652, 0.9548022599248643, 0.07612343812718159, 0.9604519773784149, 0.010937782593570287, 0.9774011298879769, 2.9402658593325923e-05, 0.9887005649439885, 0.0, 0.994350282397539, 0.0326222304998542, 0.9802259886892074, 0.07610873679788491, 0.9632768361796452, 0.14127969115110997, 0.9491525423224033, 0.19022038749108433, 0.9265536723592906, 0.2174325319368848, 0.909604519700818, 0.2610366488692889, 0.8700564972281432, 0.2938499965010893, 0.8192090395505465, 0.3429377061340303, 0.7683615818729498, 0.35935908127922717, 0.7401129943073761, 0.3702527597359971, 0.731638418052595, 0.38673294019838056, 0.6920903954310099, 0.4362175854245107, 0.5649717514603836, 0.4691779462003674, 0.48587570621721315, 0.5023882295742672, 0.35875706209767655, 0.547271361410929, 0.07344632778961978]]
        [8, [0.010820171959196951, 1.0, 0.01630376465973397, 0.9887005649439885, 0.02175795455276722, 0.9830508474904379, 0.04348650644694115, 0.9774011298879769, 0.07609403546858824, 0.9661016948319653, 0.10327677740470584, 0.9548022599248643, 0.1413090938097033, 0.9435028248688527, 0.17391662298026075, 0.9322033898128411, 0.1793708128732941, 0.9265536723592906, 0.18489850941281064, 0.9067796610484979, 0.21208125120001783, 0.8954802259924864, 0.27738451751691284, 0.8559322033709013, 0.23924929180683874, 0.8870056497377053, 0.28279460342205615, 0.8587570621721318, 0.3046995711188796, 0.8192090395505465, 0.31571086035893314, 0.7881355931837424, 0.33211753417483336, 0.7627118644193992, 0.3376011267264599, 0.7514124293633876, 0.26106605152788226, 0.8644067796256824, 0.3594472891060968, 0.723163841797814, 0.36513670026787665, 0.6723163841202172, 0.40340423779271034, 0.6158192089890699, 0.40356595226606323, 0.5847457627711762, 0.4363204947295874, 0.545197740149591, 0.4364822092029403, 0.5141242937827868, 0.46928085550544396, 0.46610169490642056, 0.4748673573621472, 0.4350282485396164, 0.4966988184124874, 0.40960451977527323, 0.49142104432210365, 0.3813559322096996, 0.5024323334132468, 0.35028248584289545, 0.5188831112170371, 0.3163841808237712, 0.5244549117444437, 0.28813559325819754, 0.5245725223788169, 0.2655367231461745, 0.5356426167871468, 0.22316384187226915, 0.54665390587829, 0.19209039550546497, 0.54674211385407, 0.17514124299590292, 0.5577681042745097, 0.14124293782786826, 0.5579298187478627, 0.11016949160997452, 0.5526961486453689, 0.07344632778961978, 0.5582973518313689, 0.03954802262158512, 0.569352744910402, 0.0, 0.585568301594356, 0.011299435056011466, 0.5355838114699601, 0.23446327692828073, 0.5079012247844873, 0.34180790958811436, 0.46935436215192733, 0.45197740119808893, 0.4365557158494236, 0.5000000000744552, 0.4253974134653138, 0.5593220338579226, 0.4143567217155773, 0.5960451976782773, 0.3870122653061068, 0.6384180791010929, 0.37603037887355695, 0.6638418078654361, 0.37578045642442404, 0.7118644067418025, 0.34839189602706355, 0.7627118644193992, 0.32642812301305346, 0.8135593219480854, 0.2882193908054065, 0.8587570621721318, 0.2991571732500663, 0.8418079095136592, 0.2719156261456725, 0.8644067796256824, 0.25012826908322233, 0.8813559321352443, 0.20661235997768793, 0.9039548022472674, 0.1631258535307468, 0.9209039547568296, 0.14676328370273656, 0.9378531072663917, 0.0870024154035652, 0.9548022599248643, 0.07612343812718159, 0.9604519773784149, 0.010937782593570287, 0.9774011298879769, 2.9402658593325923e-05, 0.9887005649439885, 0.0, 0.994350282397539, 0.0326222304998542, 0.9802259886892074, 0.07610873679788491, 0.9632768361796452, 0.14127969115110997, 0.9491525423224033, 0.19022038749108433, 0.9265536723592906, 0.2174325319368848, 0.909604519700818, 0.2610366488692889, 0.8700564972281432, 0.2938499965010893, 0.8192090395505465, 0.3429377061340303, 0.7683615818729498, 0.35935908127922717, 0.7401129943073761, 0.3702527597359971, 0.731638418052595, 0.38673294019838056, 0.6920903954310099, 0.4362175854245107, 0.5649717514603836, 0.4691779462003674, 0.48587570621721315, 0.5023882295742672, 0.35875706209767655, 0.547271361410929, 0.07344632778961978]]
    从曲线【2020_03_07_replication.png】的形态上看，曲线标签更倾向于8，所以删除4
构建如下函数，删除二者之中的一条数据
"""
def exclude_replicate(file_path='../../../datasets/ml_datasets/normed'):
    replication_list = [0.010820171959196951, 1.0, 0.01630376465973397, 0.9887005649439885, 0.02175795455276722,
              0.9830508474904379, 0.04348650644694115, 0.9774011298879769, 0.07609403546858824, 0.9661016948319653,
              0.10327677740470584, 0.9548022599248643, 0.1413090938097033, 0.9435028248688527, 0.17391662298026075,
              0.9322033898128411, 0.1793708128732941, 0.9265536723592906, 0.18489850941281064, 0.9067796610484979,
              0.21208125120001783, 0.8954802259924864, 0.27738451751691284, 0.8559322033709013, 0.23924929180683874,
              0.8870056497377053, 0.28279460342205615, 0.8587570621721318, 0.3046995711188796, 0.8192090395505465,
              0.31571086035893314, 0.7881355931837424, 0.33211753417483336, 0.7627118644193992, 0.3376011267264599,
              0.7514124293633876, 0.26106605152788226, 0.8644067796256824, 0.3594472891060968, 0.723163841797814,
              0.36513670026787665, 0.6723163841202172, 0.40340423779271034, 0.6158192089890699, 0.40356595226606323,
              0.5847457627711762, 0.4363204947295874, 0.545197740149591, 0.4364822092029403, 0.5141242937827868,
              0.46928085550544396, 0.46610169490642056, 0.4748673573621472, 0.4350282485396164, 0.4966988184124874,
              0.40960451977527323, 0.49142104432210365, 0.3813559322096996, 0.5024323334132468, 0.35028248584289545,
              0.5188831112170371, 0.3163841808237712, 0.5244549117444437, 0.28813559325819754, 0.5245725223788169,
              0.2655367231461745, 0.5356426167871468, 0.22316384187226915, 0.54665390587829, 0.19209039550546497,
              0.54674211385407, 0.17514124299590292, 0.5577681042745097, 0.14124293782786826, 0.5579298187478627,
              0.11016949160997452, 0.5526961486453689, 0.07344632778961978, 0.5582973518313689, 0.03954802262158512,
              0.569352744910402, 0.0, 0.585568301594356, 0.011299435056011466, 0.5355838114699601, 0.23446327692828073,
              0.5079012247844873, 0.34180790958811436, 0.46935436215192733, 0.45197740119808893, 0.4365557158494236,
              0.5000000000744552, 0.4253974134653138, 0.5593220338579226, 0.4143567217155773, 0.5960451976782773,
              0.3870122653061068, 0.6384180791010929, 0.37603037887355695, 0.6638418078654361, 0.37578045642442404,
              0.7118644067418025, 0.34839189602706355, 0.7627118644193992, 0.32642812301305346, 0.8135593219480854,
              0.2882193908054065, 0.8587570621721318, 0.2991571732500663, 0.8418079095136592, 0.2719156261456725,
              0.8644067796256824, 0.25012826908322233, 0.8813559321352443, 0.20661235997768793, 0.9039548022472674,
              0.1631258535307468, 0.9209039547568296, 0.14676328370273656, 0.9378531072663917, 0.0870024154035652,
              0.9548022599248643, 0.07612343812718159, 0.9604519773784149, 0.010937782593570287, 0.9774011298879769,
              2.9402658593325923e-05, 0.9887005649439885, 0.0, 0.994350282397539, 0.0326222304998542,
              0.9802259886892074, 0.07610873679788491, 0.9632768361796452, 0.14127969115110997, 0.9491525423224033,
              0.19022038749108433, 0.9265536723592906, 0.2174325319368848, 0.909604519700818, 0.2610366488692889,
              0.8700564972281432, 0.2938499965010893, 0.8192090395505465, 0.3429377061340303, 0.7683615818729498,
              0.35935908127922717, 0.7401129943073761, 0.3702527597359971, 0.731638418052595, 0.38673294019838056,
              0.6920903954310099, 0.4362175854245107, 0.5649717514603836, 0.4691779462003674, 0.48587570621721315,
              0.5023882295742672, 0.35875706209767655, 0.547271361410929, 0.07344632778961978]

    # 将replication_list中相邻的两个数字组合成一个坐标，这样数据格式与tr/va/te中的数据格式相同，才能放在一起比较
    d_list = []
    for i, d in enumerate(replication_list):
        if i % 2 == 0:
            d_list.append((d, replication_list[i+1]))
    replication_list = [4] + [d_list]

    # 1- Load previous data
    training_dataset, validation_dataset, test_dataset = get_T_V_T_dataset(file_path='../../../datasets/ml_datasets/normed')

    date_str = get_date_prefix()
    file_name_head = 'ml_normed_'
    data_stamp = None
    # 2-Check the location of the replication
    if replication_list in training_dataset:
        # 3-Remove the replication and restore the data
        training_dataset.remove(replication_list)
        file_name_middle = 'train'
        data_stamp = 'tr'
    elif replication_list in validation_dataset:
        validation_dataset.remove(replication_list)
        file_name_middle = 'vali'
        data_stamp = 'va'
    elif replication_list in test_dataset:
        test_dataset.remove(replication_list)
        file_name_middle = 'test'
        data_stamp = 'te'
    file_name_tail = '_data_list_pickle_'+date_str[:-1]+'.file'

    # Restore the dataset
    file_name = file_name_head + file_name_middle + file_name_tail
    file_path = os.path.join(file_path, file_name)
    with open(file_path, 'wb') as file:
        if data_stamp == 'tr':
            pickle.dump(training_dataset, file)
        elif data_stamp == 'va':
            pickle.dump(validation_dataset, file)
        elif data_stamp == 'te':
            pickle.dump(test_dataset, file)

if __name__ == '__main__':
    exclude_replicate()